library ieee;

use ieee.std_logic_1164.all;
use ieee.numeric_std.all;


entity ganancia is

	port(
		
		clk:			in std_logic;
		
		data_in:		in signed (23 downto 0);
		valid_in:	in std_logic;
		valid_out:	out std_logic;
		
		data_out:	out signed (23 downto 0) := (others =>'0');
		
		a0: integer
	
	);
end ganancia;


architecture solucion of ganancia is

signal state : 						integer := 0;
signal mult_in_a:				   	signed(23 downto 0)  := (others =>'0');
signal mult_in_b:   					signed(31 downto 0)  := (others =>'0');
signal mult_out :						signed(55 downto 0) := (others =>'0');


begin

---MULTIPLICADOR
process(mult_in_a,mult_in_b)
begin
	mult_out <= mult_in_a*mult_in_b;
end process;


---MAQUINA DE ESTADOS
process(clk)

begin

	if rising_edge(clk) then
	
			if(valid_in = '1' and state = 0) then
						
						mult_in_a <= data_in;
						mult_in_b <= to_signed(a0,32);
						state <= 1;
			
			elsif(state = 1) then
						
						data_out <= resize(shift_right(mult_out,28),24);
						valid_out <= '1';
						state <= 0;

			end if;
	end if;
end process;


end solucion;
